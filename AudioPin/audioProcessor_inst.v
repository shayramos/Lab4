// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 17.1 (Build Build 590 10/25/2017)
// Created on Tue Jun 11 19:27:37 2019

audioProcessor audioProcessor_inst
(
	.clock(clock_sig) ,	// input  clock_sig
	.reset(reset_sig) ,	// input  reset_sig
	.writedata(writedata_sig) ,	// input [15:0] writedata_sig
	.read(read_sig) ,	// input  read_sig
	.write(write_sig) ,	// input  write_sig
	.readdata(readdata_sig) ,	// output [31:0] readdata_sig
	.lrck(lrck_sig) ,	// output  lrck_sig
	.bclk(bclk_sig) ,	// output  bclk_sig
	.codecSerialData(codecSerialData_sig) ,	// output  codecSerialData_sig
	.codec_clk(codec_clk_sig) 	// output  codec_clk_sig
);

defparam audioProcessor_inst.IDLE = 'b0000;
defparam audioProcessor_inst.FETCH_MEMORY = 'b0001;
defparam audioProcessor_inst.WAITING_MEMORY_1 = 'b0011;
defparam audioProcessor_inst.WAITING_DONE_1 = 'b0010;
defparam audioProcessor_inst.SEND_CODEC_1 = 'b0100;
defparam audioProcessor_inst.WAITING_MEMORY_2 = 'b0101;
defparam audioProcessor_inst.WAITING_DONE_2 = 'b0110;
defparam audioProcessor_inst.WAITING_CODEC = 'b0111;
defparam audioProcessor_inst.SEND_CODEC_2 = 'b1000;
